}
#title(main='Shannon')
dev.off()
### plot each PC separately with proportion of variation explained
for (k in 1:K){
pdf(paste(paste('../results_3pc_1n/FPCs_mean_PC', k, sep=''), 'pdf', sep='.'), width = 4, height = 4)
plot(time_cont, Mu_functions*sigma_y + mu_y, type="l", ylim=c(-0.1, 6.5),
lwd=2,col=1, xlab='Month of life', ylab='Shannon diversity', font.lab=2, cex.lab=1.2)
lines(time_cont, (Mu_functions + FPC_mean[,k])*sigma_y + mu_y,type="l",lwd=3,lty=2,col=2) # red
lines(time_cont, (Mu_functions - FPC_mean[,k])*sigma_y + mu_y,type="l",lwd=3,lty=2,col=3) # green
title(main=paste(paste('PC', k, sep=' '), ' (', prop_var_avg[k], ' )', sep=''))
#axis(1, font=2) # make x-axis ticks label bold
legend('topright', c('+ pc', '- pc'), lty=c(2,2), lwd=c(3,3), col=c(2, 3), bty='n', cex=0.5)
dev.off()
}
62.37+28.5
62.37+28.5+9.13
plot1 = ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10))
plot2 = ggboxplot(df, x = "abx", y = "fpc2", color = "abx")+
stat_compare_means(method = "t.test")
plot3 = ggboxplot(df, x = "abx", y = "fpc3", color = "abx")+
stat_compare_means(method = "t.test")
grid.arrange(plot1, plot2, plot3, ncol=3)
library(ggpubr)
library(gridExtra)
plot1 = ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10))
plot2 = ggboxplot(df, x = "abx", y = "fpc2", color = "abx")+
stat_compare_means(method = "t.test")
plot3 = ggboxplot(df, x = "abx", y = "fpc3", color = "abx")+
stat_compare_means(method = "t.test")
grid.arrange(plot1, plot2, plot3, ncol=3)
abx_col = c('#2c7fb8', '#dd1c77')
plot1 = ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 1 scores') +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
plot1
abx_col = c('#2c7fb8', '#dd1c77')
plot1 = ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes"))
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
pabx_col = c('#2c7fb8', '#dd1c77')
plot1 = ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
abx_col = c('#2c7fb8', '#dd1c77')
plot1 = ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
plot1
abx_col = c('#2c7fb8', '#dd1c77')
ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
ggsave('../results_3pc_1n/boxplot_abx_PC1_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "abx", y = "fpc2", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 2 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
ggsave('../results_3pc_1n/boxplot_abx_PC2_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "abx", y = "fpc3", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 3 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
ggsave('../results_3pc_1n/boxplot_abx_PC3_scores.pdf', width=4, height=3.2)
abx_col = c('#2c7fb8', '#dd1c77')
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=abx)) +
xlab("Month of life") + ylab("Shannon diversity")  +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col) +
geom_point(dat, aes(x=Time, y=response, color=abx), alpha=0.2)
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=abx)) +
xlab("Month of life") + ylab("Shannon diversity")  +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
head(dat)
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=abx)) +
xlab("Month of life") + ylab("Shannon diversity")  + ylim(-0.1, 7) +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
abx_col = c('#2c7fb8', '#dd1c77')
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=abx)) +
xlab("Month of life") + ylab("Shannon diversity")  + ylim(-0.1, 7) +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col) +
geom_point(dat, aes(x=Time, y=response, color=abx), alpha=0.2)
head(dat)
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=abx)) +
xlab("Month of life") + ylab("Shannon diversity")  + ylim(-0.1, 7) +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col) +
geom_point(dat, aes(x=Time, y=response), alpha=0.2)
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=abx)) +
geom_point(dat, aes(x=Time, y=response), alpha=0.2)
abx_col = c('#2c7fb8', '#dd1c77')
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=abx)) +
xlab("Month of life") + ylab("Shannon diversity")  + ylim(-0.1, 7) +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col) +
#geom_point(dat, aes(x=Time, y=response), alpha=0.2)
ggsave('../results_3pc_1n/smoothed_shannon_abx_transformed.pdf')
dm_col = c('#636363', '#8856a7')
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=delivery)) + geom_point(alpha=0.2) +
xlab("Month of life") + ylab("Shannon diversity")  + ylim(-0.1, 7) +
geom_smooth(se=FALSE, size=1.5, aes(group=delivery)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/smoothed_shannon_delivery_transformed.pdf', width=4, height=3)
diet_col = c('#006837', '#e6550d')
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=diet)) + geom_point(alpha=0.2) +
xlab("Month of life") + ylab("Shannon diversity")  + ylim(-0.1, 7) +
geom_smooth(se=FALSE, size=1.5, aes(group=diet)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('../results_3pc_1n/smoothed_shannon_diet_transformed.pdf', width=4, height=3)
abx_col = c('#2c7fb8', '#dd1c77')
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=abx)) +
xlab("Month of life") + ylab("Shannon diversity")  + ylim(-0.1, 7) +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col) +
#geom_point(dat, aes(x=Time, y=response), alpha=0.2)
ggsave('../results_3pc_1n/smoothed_shannon_abx_transformed.pdf')
dm_col = c('#636363', '#8856a7')
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=delivery)) +
xlab("Month of life") + ylab("Shannon diversity")  + ylim(-0.1, 7) +
geom_smooth(se=FALSE, size=1.5, aes(group=delivery)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/smoothed_shannon_delivery_transformed.pdf', width=4, height=3)
diet_col = c('#006837', '#e6550d')
ggplot(df, aes(x=time, y=Fits_sparse*sigma_y + mu_y, color=diet)) +
xlab("Month of life") + ylab("Shannon diversity")  + ylim(-0.1, 7) +
geom_smooth(se=FALSE, size=1.5, aes(group=diet)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('../results_3pc_1n/smoothed_shannon_diet_transformed.pdf', width=4, height=3)
dm_col = c('#636363', '#8856a7')
ggboxplot(df, x = "delivery", y = "fpc1", color = "delivery") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('delivery') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/boxplot_delivery_PC1_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "delivery", y = "fpc2", color = "delivery") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 2 scores') + xlab('delivery') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/boxplot_delivery_PC2_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "delivery", y = "fpc3", color = "delivery") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 3 scores') + xlab('delivery') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/boxplot_delivery_PC3_scores.pdf', width=4, height=3.2)
table(df$delivery)
dm_col = c('#636363', '#8856a7')
ggboxplot(df, x = "delivery", y = "fpc1", color = "delivery") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('delivery') +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/boxplot_delivery_PC1_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "delivery", y = "fpc2", color = "delivery") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 2 scores') + xlab('delivery') +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/boxplot_delivery_PC2_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "delivery", y = "fpc3", color = "delivery") +
stat_compare_means(method = "t.test")  +
theme(axis.text.x = element_text(face="bold", size=10),
axis.text.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 3 scores') + xlab('delivery') +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/boxplot_delivery_PC3_scores.pdf', width=4, height=3.2)
abx_col = c('#2c7fb8', '#dd1c77')
ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold", size=10),
axis.title.y = element_text(face="bold", size=10)) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
abx_col = c('#2c7fb8', '#dd1c77')
ggboxplot(df, x = "abx", y = "fpc1", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
ggsave('../results_3pc_1n/boxplot_abx_PC1_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "abx", y = "fpc2", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 2 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
ggsave('../results_3pc_1n/boxplot_abx_PC2_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "abx", y = "fpc3", color = "abx") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 3 scores') + xlab('Antibiotics') +
scale_x_discrete(breaks=c("n", "y"), labels=c("No", "Yes")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
ggsave('../results_3pc_1n/boxplot_abx_PC3_scores.pdf', width=4, height=3.2)
####### delivery #########
dm_col = c('#636363', '#8856a7')
ggboxplot(df, x = "delivery", y = "fpc1", color = "delivery") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('delivery') +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/boxplot_delivery_PC1_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "delivery", y = "fpc2", color = "delivery") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 2 scores') + xlab('delivery') +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/boxplot_delivery_PC2_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "delivery", y = "fpc3", color = "delivery") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 3 scores') + xlab('delivery') +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('../results_3pc_1n/boxplot_delivery_PC3_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "delivery", y = "fpc3", color = "delivery", add='jitter') +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 3 scores') + xlab('delivery') +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
table(df$diet)
####### diet #########
diet_col = c('#2c7fb8', '#dd1c77')
ggboxplot(df, x = "diet", y = "fpc1", color = "diet") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('diet') +
scale_x_discrete(breaks=c("bd", "fd"), labels=c('breastfed', 'formula')) +
labs(color='diet') + scale_color_manual(labels = c("No", "Yes"), values=diet_col)
ggsave('../results_3pc_1n/boxplot_diet_PC1_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "diet", y = "fpc2", color = "diet") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 2 scores') + xlab('diet') +
scale_x_discrete(breaks=c("bd", "fd"), labels=c('breastfed', 'formula')) +
labs(color='diet') + scale_color_manual(labels = c("No", "Yes"), values=diet_col)
ggsave('../results_3pc_1n/boxplot_diet_PC2_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "diet", y = "fpc3", color = "diet") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 3 scores') + xlab('diet') +
scale_x_discrete(breaks=c("bd", "fd"), labels=c('breastfed', 'formula')) +
labs(color='diet') + scale_color_manual(labels = c("No", "Yes"), values=diet_col)
ggsave('../results_3pc_1n/boxplot_diet_PC3_scores.pdf', width=4, height=3.2)
####### diet #########
diet_col = c('#2c7fb8', '#dd1c77')
ggboxplot(df, x = "diet", y = "fpc1", color = "diet") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('diet') +
scale_x_discrete(breaks=c("bd", "fd"), labels=c('breastfed', 'formula')) +
labs(color='diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('../results_3pc_1n/boxplot_diet_PC1_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "diet", y = "fpc2", color = "diet") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 2 scores') + xlab('diet') +
scale_x_discrete(breaks=c("bd", "fd"), labels=c('breastfed', 'formula')) +
labs(color='diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('../results_3pc_1n/boxplot_diet_PC2_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "diet", y = "fpc3", color = "diet") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 3 scores') + xlab('diet') +
scale_x_discrete(breaks=c("bd", "fd"), labels=c('breastfed', 'formula')) +
labs(color='diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('../results_3pc_1n/boxplot_diet_PC3_scores.pdf', width=4, height=3.2)
####### diet #########
diet_col = c('#006837', '#e6550d')
ggboxplot(df, x = "diet", y = "fpc1", color = "diet") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 1 scores') + xlab('diet') +
scale_x_discrete(breaks=c("bd", "fd"), labels=c('breastfed', 'formula')) +
labs(color='diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('../results_3pc_1n/boxplot_diet_PC1_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "diet", y = "fpc2", color = "diet") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 2 scores') + xlab('diet') +
scale_x_discrete(breaks=c("bd", "fd"), labels=c('breastfed', 'formula')) +
labs(color='diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('../results_3pc_1n/boxplot_diet_PC2_scores.pdf', width=4, height=3.2)
ggboxplot(df, x = "diet", y = "fpc3", color = "diet") +
stat_compare_means(method = "t.test")  +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
theme(legend.position="right") + ylab('PC 3 scores') + xlab('diet') +
scale_x_discrete(breaks=c("bd", "fd"), labels=c('breastfed', 'formula')) +
labs(color='diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('../results_3pc_1n/boxplot_diet_PC3_scores.pdf', width=4, height=3.2)
table(df$time)
library(ggplot2)
abx_col = c('#2c7fb8', '#dd1c77')
ggplot(dat, aes(x=Time, y=response, color=abx)) + geom_point(alpha=0.2) +
xlab("Month of life") + ylab("Shannon diversity")  + scale_y_continuous(breaks=seq(0,29,5)) +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
library(ggplot2)
abx_col = c('#2c7fb8', '#dd1c77')
ggplot(dat, aes(x=Time, y=response, color=abx)) + geom_point(alpha=0.2) +
xlab("Month of life") + ylab("Shannon diversity")  + scale_x_continuous(breaks=seq(0,29,5)) +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)
library(ggplot2)
abx_col = c('#2c7fb8', '#dd1c77')
ggplot(dat, aes(x=Time, y=response, color=abx)) + geom_point(alpha=0.2) +
xlab("Month of life") + ylab("Shannon diversity")  + scale_x_continuous(breaks=seq(0,29,5)) +
geom_smooth(se=FALSE, size=1.5, aes(group=abx)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Antibiotics') + scale_color_manual(labels = c("No", "Yes"), values=abx_col)  # change legend texts
ggsave('Observed_shannon_abx.pdf', width=4, height=3)
dm_col = c('#636363', '#8856a7')
ggplot(dat, aes(x=Time, y=response, color=delivery)) + geom_point(alpha=0.2) +
xlab("Month of life") + ylab("Shannon diversity")  + scale_x_continuous(breaks=seq(0,29,5)) +
geom_smooth(se=FALSE, size=1.5, aes(group=delivery)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('Observed_shannon_delivery.pdf', width=4, height=3)
diet_col = c('#006837', '#e6550d')
ggplot(dat, aes(x=Time, y=response, color=diet)) + geom_point(alpha=0.2) +
xlab("Month of life") + ylab("Shannon diversity")  + scale_x_continuous(breaks=seq(0,29,5)) +
geom_smooth(se=FALSE, size=1.5, aes(group=diet)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('Observed_shannon_diet.pdf', width=4, height=3)
dm_col = c('#636363', '#8856a7')
ggplot() + geom_line(data=dm_data, aes(x=time, y=response, color=factor(dm_data$group)), size=1.2) +
scale_color_manual(values=dm_col) + labs(colour= "delivery") +
xlab("Month of life") + ylab("Shannon diversity") + ylim(-0.1, 7) + scale_x_continuous(breaks=seq(0,29,5)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
geom_point(data=dat, aes(x=Time, y=response, color=delivery), alpha=0.5, size=1.2) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('splinectome_delivery_curves.pdf', width = 4, height = 3, dpi=600)
diet_col = c('#006837', '#e6550d')
ggplot() + geom_line(data=diet_data, aes(x=time, y=response, color=factor(diet_data$group)), size=1.2) +
scale_color_manual(values=diet_col) + labs(colour= "diet") + scale_x_continuous(breaks=seq(0,29,5)) +
xlab("Month of life") + ylab("Shannon diversity") + ylim(-0.1, 7) +
theme_classic() + theme(axis.text = element_text(color='black')) +
geom_point(data=dat, aes(x=Time, y=response, color=diet), alpha=0.5, size=1.2) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('splinectome_diet_curves.pdf', width = 4, height = 3, dpi=600)
diet_col = c('#006837', '#e6550d')
ggplot() + geom_line(data=diet_data, aes(x=time, y=response, color=factor(diet_data$group)), size=1.2) +
scale_color_manual(values=diet_col) + labs(colour= "diet") + scale_x_continuous(breaks=seq(0,29,5)) +
xlab("Month of life") + ylab("Shannon diversity") + ylim(-0.1, 7) +
theme_classic() + theme(axis.text = element_text(color='black')) +
geom_point(data=dat, aes(x=Time, y=response, color=diet), alpha=0.2) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Diet') + scale_color_manual(labels=c('breastfed', 'formula'), values=diet_col)
ggsave('splinectome_diet_curves.pdf', width = 4, height = 3, dpi=600)
dm_col = c('#636363', '#8856a7')
ggplot() + geom_line(data=dm_data, aes(x=time, y=response, color=factor(dm_data$group)), size=1.2) +
scale_color_manual(values=dm_col) + labs(colour= "delivery") +
xlab("Month of life") + ylab("Shannon diversity") + ylim(-0.1, 7) + scale_x_continuous(breaks=seq(0,29,5)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
geom_point(data=dat, aes(x=Time, y=response, color=delivery), alpha=0.2) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
labs(color='Delivery Mode') + scale_color_manual(values=dm_col)
ggsave('splinectome_delivery_curves.pdf', width = 4, height = 3, dpi=600)
head(dat)
library(ggplot2)
ggplot(dat, aes(x=Time, y=response)) + geom_line(alpha=0.5) + guides(colour=FALSE) +
xlab("Month of life") + ylab("Shannon diversity") + aes(colour = factor(ID_unique)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"))
ggplot(dat, aes(x=Time, y=response)) + geom_line(alpha=0.5) + guides(colour=FALSE) +
xlab("Month of life") + ylab("Shannon diversity") + aes(colour = factor(ID_unique)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
scale_colour_brewer(palette = "Set1")
library(ggplot2)
ggplot(dat, aes(x=Time, y=response)) + geom_line(alpha=0.5) + guides(colour=FALSE) +
xlab("Month of life") + ylab("Shannon diversity") + aes(colour = factor(ID_unique)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
scale_fill_distiller(palette = "Spectral")
ggplot(dat, aes(x=Time, y=response)) + geom_line(alpha=0.5) + guides(colour=FALSE) +
xlab("Month of life") + ylab("Shannon diversity") + aes(colour = factor(ID_unique)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
scale_fill_distiller(palette = "Spectral") + scale_x_continuous(breaks=seq(0,29,5))
library(ggplot2)
ggplot(dat, aes(x=Time, y=response)) + geom_line(alpha=0.5) + guides(colour=FALSE) +
xlab("Month of life") + ylab("Shannon diversity") + aes(colour = factor(ID_unique)) +
theme_classic() + theme(axis.text = element_text(color='black')) +
theme(axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")) +
scale_fill_distiller(palette = "Spectral") + scale_x_continuous(breaks=seq(0,29,5))
ggsave('Observed_spaghetti.pdf', width = 4, height = 3, dpi=600)
